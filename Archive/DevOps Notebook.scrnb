{"cells":[{"type":"markdown","source":["Instructions:","","1. Install [script noteBook](https://marketplace.visualstudio.com/items?itemName=awsxxf.scriptnotebook) extension  ","","2. Enter SSH session in VS Code terminal  ","3. Click \"Run\" on cells you want to execute on SSH host  ","  ","To copy files to/from SSH host - use SSH and SCP notebook",""]},{"type":"code","source":["# This cell will prevent the notebook execution ","# if \"Run all\" was pressed accidentaly","","while true; do sleep 10; done"]},{"type":"markdown","source":["### Initialize"]},{"type":"code","source":["ssh dietpi@192.168.0.30"]},{"type":"markdown","source":["### SSH"]},{"type":"code","source":["# Install openssh-server","    confirm-ml","","    sudo apt update","    sudo apt install -y openssh-server","    ufw allow ssh","    sudo systemctl enable ssh --now"]},{"type":"code","source":["# Generate key","    ssh-keygen"]},{"type":"code","source":["# Download and run ssh script","    confirm","","    wget https://raw.githubusercontent.com/aksenov-fx/bash/main/install_ssh.sh","    chmod +x install_ssh.sh","    ./install_ssh.sh "]},{"type":"code","source":["# Copy key - bash","    ssh-copy-id -i ~/.ssh/id_rsa.pub user@host","","# Copy key - Powershell","    type $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh user@host \"cat >> .ssh/authorized_keys\""]},{"type":"code","source":["# Will add separator line after each bash command for readability","echo 'PROMPT_COMMAND=\"echo ----------------------------------------------------------\"' >> ~/.bashrc"]},{"type":"code","source":["sudo mv confirm.sh /usr/local/bin/confirm"]},{"type":"code","source":["sudo mv confirm-ml /usr/local/bin/confirm-ml"]},{"type":"markdown","source":["### Bash"]},{"type":"code","source":["git clone https://github.com/nigelpoulton/TheK8sBook.git"]},{"type":"markdown","source":["#### Files"]},{"type":"code","source":["export remote_path=\"ansible/webserver/\""]},{"type":"code","source":["export file=\"test2.sh\""]},{"type":"code","source":["export file=\"install_microk8s_to_custom_path.sh\""]},{"type":"code","source":["ls -lh"]},{"type":"code","source":["ls -lh /usr/bin/snap"]},{"type":"code","source":["ls -lh $remote_path"]},{"type":"code","source":["mkdir -p $path"]},{"type":"code","source":["chmod +x $file"]},{"type":"code","source":["chmod 600 \"${remote_path}${$file}\""]},{"type":"code","source":["chown -R ansible:ansible $remote_path"]},{"type":"code","source":["sudo chmod -R u+w $remote_path"]},{"type":"code","source":["confirm","./$file"]},{"type":"markdown","source":["#### Packages"]},{"type":"code","source":["confirm","sudo apt-get update"]},{"type":"code","source":["confirm","sudo apt-get upgrade"]},{"type":"markdown","source":["#### System info"]},{"type":"code","source":["cat /etc/os-release"]},{"type":"code","source":["cat /etc/group"]},{"type":"code","source":["ip a"]},{"type":"code","source":["echo $PATH | tr ':' '\\n'"]},{"type":"code","source":["ps -aux --sort=%cpu"]},{"type":"code","source":["ps -aux --sort=%mem"]},{"type":"code","source":["df -h"]},{"type":"code","source":["free -h"]},{"type":"code","source":["date"]},{"type":"markdown","source":["### Docker"]},{"type":"code","source":["confirm","curl https://get.docker.com | bash"]},{"type":"code","source":["export docker_hub_user=\"aksenovfx\""]},{"type":"markdown","source":["#### Images"]},{"type":"code","source":["export image=\"flask_test2\"","export image2=\"flask_test\"","export image=\"$$docker_hub_user/maventest\""]},{"type":"code","source":["docker pull $image"]},{"type":"code","source":["cd $path","docker build -t $image ."]},{"type":"code","source":["docker inspect $image"]},{"type":"markdown","source":["#### Containers"]},{"type":"code","source":["docker run $image"]},{"type":"code","source":["docker run --rm $image"]},{"type":"code","source":["docker run --rm -d \\","-p 5432:5432 \\","-e POSTGRES_DB=db \\","-e POSTGRES_USER=user \\","-e POSTGRES_PASSWORD=password \\","$image"]},{"type":"code","source":["docker run --rm -d \\","-p 8000:3000 \\","-e DATABASE_HOST=host.docker.internal \\","-e DATABASE_USER=user \\","-e DATABASE_PASSWORD=password \\","-e DATABASE_NAME=db \\","$image2"]},{"type":"code","source":["export path_local=\"/home/user1/docker-course/workbooks/05-starter-code\"","export path_remote=\"/src/app/\"","export command=\"java -cp /src/app/JavaApp.jar JavaApp\"","","docker run --rm -v $path_local:$path_remote $image $command"]},{"type":"code","source":["docker commit existing-container-name new-image-name","docker run -d -p 8080:80 new-image-name"]},{"type":"markdown","source":["#### Container commands"]},{"type":"code","source":["docker exec ubuntu-c ls -l"]},{"type":"markdown","source":["#### Compose"]},{"type":"code","source":["cd $path","docker compose up -d"]},{"type":"code","source":["cd $path","docker compose stop"]},{"type":"code","source":["cd $path","docker compose start"]},{"type":"code","source":["confirm","cd $path","docker compose down"]},{"type":"markdown","source":["#### Info"]},{"type":"code","source":["docker ps -a"]},{"type":"code","source":["docker logs 47f4d78a4174 --tail 10"]},{"type":"markdown","source":["#### Cleanup"]},{"type":"code","source":["docker stop 8b565f60649b0aa"]},{"type":"code","source":["docker ps -q \\","--filter \"ancestor=mysql/mysql-server:8.0\" \\","| xargs docker stop"]},{"type":"code","source":["confirm","docker rm -f 2badb31af83c"]},{"type":"code","source":["confirm","docker rmi $image"]},{"type":"markdown","source":["#### Registry"]},{"type":"code","source":["gpg --gen-key"]},{"type":"code","source":["#gpg --gen-key","#pass init <your_generated_gpg-id_public_key>","#docker login -u aksenovfx"]},{"type":"code","source":["docker push $image"]},{"type":"markdown","source":["### kubectl"]},{"type":"markdown","source":["#### config"]},{"type":"code","source":["# install kubectl","# https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/","","curl -LO https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl","install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl"]},{"type":"code","source":["snap install kubectl --classic"]},{"type":"markdown","source":["#### info"]},{"type":"code","source":["#cluster info","","kubectl version --client","echo ---","kubectl config get-contexts","echo ---","kubectl cluster-info","echo ---","kubectl api-resources","echo ---","kubectl get nodes","echo ---","kubectl get pods --namespace kube-system"]},{"type":"code","source":["kubectl get namespaces"]},{"type":"code","source":["kubectl describe ns default"]},{"type":"code","source":["kubectl get pods"]},{"type":"code","source":["kubectl get services"]},{"type":"code","source":["kubectl get rs"]},{"type":"markdown","source":["#### pod info"]},{"type":"code","source":["export pod=\"kubia\""]},{"type":"code","source":["kubectl get pods $pod -o yaml","","# Spec - Desired state is in this block","# Status - Observed state is in this block"]},{"type":"code","source":["kubectl describe pod $pod"]},{"type":"code","source":["# Get the logs from the first container in the Pod","kubectl logs $pod"]},{"type":"markdown","source":["### Deployment info"]},{"type":"code","source":["kubectl get deploy hello-deploy"]},{"type":"code","source":["kubectl describe deploy hello-deploy"]},{"type":"markdown","source":["#### Run"]},{"type":"code","source":["kubectl run kubia --image=luksa/kubia --port=8080"]},{"type":"code","source":["kubectl expose pod kubia --type=LoadBalancer --port=8080 --name kubia-http"]},{"type":"code","source":["kubectl exec $pod -- ps"]},{"type":"code","source":["kubectl exec -it hello-pod -- sh"]},{"type":"markdown","source":["#### Apply"]},{"type":"code","source":["export remote_path=\"TheK8sBook/deployments\""]},{"type":"code","source":["cd $remote_path"]},{"type":"code","source":["ls -lh"]},{"type":"code","source":["confirm","kubectl apply -f deploy.yml"]},{"type":"markdown","source":["#### remove"]},{"type":"code","source":["confirm","kubectl delete pod $pod"]},{"type":"code","source":["confirm","kubectl delete service kubia-http"]},{"type":"code","source":["confirm","microk8s kubectl delete namespace portainer"]},{"type":"markdown","source":["### microk8s"]},{"type":"markdown","source":["#### config"]},{"type":"code","source":["echo 'export PATH=$PATH:/snap/bin' >> ~/.bashrc"]},{"type":"code","source":["cat ~/.bashrc"]},{"type":"code","source":["sudo usermod -a -G microk8s dietpi && sudo chown -R dietpi ~/.kube"]},{"type":"code","source":["microk8s config > client.config"]},{"type":"code","source":["microk8s config > ~/.kube/config"]},{"type":"code","source":["# Enable Portainer","confirm-ml","","sudo apt install -y git","","git config --global --add safe.directory /snap/microk8s/current/addons/community/.git","microk8s enable community","microk8s enable portainer"]},{"type":"code","source":["confirm","microk8s enable metallb:192.168.0.200-192.168.0.240"]},{"type":"code","source":["confirm","microk8s stop"]},{"type":"code","source":["microk8s start"]},{"type":"markdown","source":["#### info"]},{"type":"code","source":["microk8s status"]},{"type":"markdown","source":["### Ansible"]},{"type":"code","source":["ansible -h"]},{"type":"code","source":["ansible all -m ping"]},{"type":"code","source":["ansible all -a hostname"]},{"type":"code","source":["ansible all -m shell -a \"hostname\""]},{"type":"code","source":["confirm","ansible all -m copy -a \"src=file.txt dest=dest.txt\""]},{"type":"code","source":["confirm","ansible all -m service -a \"name=httpd state=restarted\""]},{"type":"code","source":["ansible-playbook webserver-playbook.yml --syntax-check"]},{"type":"code","source":["confirm","ansible-playbook webserver-playbook.yml"]},{"type":"markdown","source":["#### Other"]},{"type":"code","source":["sudo systemctl enable systemd-timesyncd && sudo systemctl start systemd-timesyncd && timedatectl status"]},{"type":"code","source":["sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL"]},{"type":"code","source":["sudo shutdown -h now"]},{"type":"code","source":["sudo reboot"]},{"type":"markdown","source":["#### Temp"]},{"type":"code","source":["confirm","rm $file"]}]}